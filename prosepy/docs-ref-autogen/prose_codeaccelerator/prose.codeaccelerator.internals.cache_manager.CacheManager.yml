### YamlMime:UniversalReference
api_name: []
items:
- children:
  - prose.codeaccelerator.internals.cache_manager.CacheManager.add_object
  - prose.codeaccelerator.internals.cache_manager.CacheManager.get_cache_count
  - prose.codeaccelerator.internals.cache_manager.CacheManager.get_object
  class: prose.codeaccelerator.internals.cache_manager.CacheManager
  fullName: prose.codeaccelerator.internals.cache_manager.CacheManager
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: prose.codeaccelerator.internals.cache_manager
  name: CacheManager
  source:
    id: CacheManager
    path: prose\codeaccelerator\internals\cache_manager.py
    remote:
      branch: HEAD
      path: prose\codeaccelerator\internals\cache_manager.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 4
  summary: 'This is analogous to C# CacheManager. The objects present in Python''s
    cache manager assume that their

    counter part objects are present in C#''s cache manager. When Python objects are
    collected, entries are

    automatically removed from Python side as well as from C# side.




    '
  syntax:
    content: CacheManager(background_process_id)
  type: class
  uid: prose.codeaccelerator.internals.cache_manager.CacheManager
- class: prose.codeaccelerator.internals.cache_manager.CacheManager
  fullName: prose.codeaccelerator.internals.cache_manager.CacheManager.add_object
  langs:
  - python
  module: prose.codeaccelerator.internals.cache_manager
  name: add_object
  source:
    id: add_object
    path: prose\codeaccelerator\internals\cache_manager.py
    remote:
      branch: HEAD
      path: prose\codeaccelerator\internals\cache_manager.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 32
  summary: 'Ensures that the cache contains the passed in :object_to_cache indexed
    by the specified :reference_id.

    This method is *almost always* called by __init__ of objects.

    :param reference_id:

    :param object_to_cache:

    :return:

    '
  syntax:
    content: add_object(reference_id, object_to_cache)
    parameters:
    - id: reference_id
    - id: object_to_cache
  type: method
  uid: prose.codeaccelerator.internals.cache_manager.CacheManager.add_object
- class: prose.codeaccelerator.internals.cache_manager.CacheManager
  fullName: prose.codeaccelerator.internals.cache_manager.CacheManager.get_cache_count
  langs:
  - python
  module: prose.codeaccelerator.internals.cache_manager
  name: get_cache_count
  source:
    id: get_cache_count
    path: prose\codeaccelerator\internals\cache_manager.py
    remote:
      branch: HEAD
      path: prose\codeaccelerator\internals\cache_manager.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 58
  summary: 'Returns no. of entries present in this cache manager

    :return:

    '
  syntax:
    content: get_cache_count()
    parameters: []
  type: method
  uid: prose.codeaccelerator.internals.cache_manager.CacheManager.get_cache_count
- class: prose.codeaccelerator.internals.cache_manager.CacheManager
  fullName: prose.codeaccelerator.internals.cache_manager.CacheManager.get_object
  langs:
  - python
  module: prose.codeaccelerator.internals.cache_manager
  name: get_object
  source:
    id: get_object
    path: prose\codeaccelerator\internals\cache_manager.py
    remote:
      branch: HEAD
      path: prose\codeaccelerator\internals\cache_manager.py
      repo: https://apidrop.visualstudio.com/Content%20CI/_git/ReferenceAutomation
    startLine: 45
  summary: 'Gets the cached object. If reference_id doesn''t exist in cache, it means

    that the object was created on C# side. Just return None so caller can create

    a fresh instance and cache it.

    This method is *almost always* called in methods that gets object''s referenceId
    as

    return value from C# side.

    :param reference_id:

    :return:

    '
  syntax:
    content: get_object(reference_id)
    parameters:
    - id: reference_id
  type: method
  uid: prose.codeaccelerator.internals.cache_manager.CacheManager.get_object
references:
- fullName: prose.codeaccelerator.internals.cache_manager.CacheManager.add_object
  isExternal: false
  name: add_object
  parent: prose.codeaccelerator.internals.cache_manager.CacheManager
  uid: prose.codeaccelerator.internals.cache_manager.CacheManager.add_object
- fullName: prose.codeaccelerator.internals.cache_manager.CacheManager.get_cache_count
  isExternal: false
  name: get_cache_count
  parent: prose.codeaccelerator.internals.cache_manager.CacheManager
  uid: prose.codeaccelerator.internals.cache_manager.CacheManager.get_cache_count
- fullName: prose.codeaccelerator.internals.cache_manager.CacheManager.get_object
  isExternal: false
  name: get_object
  parent: prose.codeaccelerator.internals.cache_manager.CacheManager
  uid: prose.codeaccelerator.internals.cache_manager.CacheManager.get_object
