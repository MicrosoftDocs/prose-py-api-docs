### YamlMime:PythonClass
uid: prose.codeaccelerator.FindPatternsBuilder
name: FindPatternsBuilder
fullName: prose.codeaccelerator.FindPatternsBuilder
module: prose.codeaccelerator
inheritances:
- builtins.object
summary: A builder for data and constraints in order to learn code for identifying
  patterns in a set of strings.
constructor:
  syntax: FindPatternsBuilder(data)
  parameters:
  - name: data
    description: List of strings to identify patterns from.
    isRequired: true
    types:
    - <xref:List>[<xref:str>]
methods:
- uid: prose.codeaccelerator.FindPatternsBuilder.learn
  name: learn
  summary: Attempt to learn a set of patterns that cover the data and satisfy the
    constraints that have been set on this builder.
  signature: learn()
attributes:
- uid: prose.codeaccelerator.FindPatternsBuilder.custom_regex_tokens
  name: custom_regex_tokens
  summary: "A list of custom regex tokens \u2013 each custom regex token is represented\
    \ as a tuple\nof strings (name, regex). The custom regex tokens are used while\
    \ generating the patterns."
  return:
    types:
    - <xref:List>[<xref:Tuple>[<xref:str>, <xref:str>]]
- uid: prose.codeaccelerator.FindPatternsBuilder.in_different_clusters
  name: in_different_clusters
  summary: 'A list of collections of strings. Each collection of strings constrains

    each string in the collection to be covered by a different regex/cluster.

    Each collection should have at least 2 strings, and all strings in the

    collections must come from the data provided to the builder during construction.'
  return:
    types:
    - <xref:List>[<xref:Iter>[<xref:str>]]
- uid: prose.codeaccelerator.FindPatternsBuilder.in_same_cluster
  name: in_same_cluster
  summary: 'A list of collections of strings. Each collection of strings constrains

    all the strings in the collection to be covered by the same regex/cluster.

    Each collection should have at least 2 strings, and all strings in the

    collections must come from the data provided to the builder during construction.'
  return:
    types:
    - <xref:List>[<xref:Iter>[<xref:str>]]
- uid: prose.codeaccelerator.FindPatternsBuilder.include_outlier_patterns
  name: include_outlier_patterns
  summary: 'A switch controlling whether the *.learn()* returns outlier patterns too.
    These outlier

    patterns may be of a lower quality and may cover significantly fewer inputs. By
    default, it is set to *False*.'
  return:
    types:
    - <xref:bool>
- uid: prose.codeaccelerator.FindPatternsBuilder.optimize_for_long_constants
  name: optimize_for_long_constants
  summary: 'A switch controlling whether the *.learn()* uses the long constant optimization.

    This optimization improves performance significantly for input data with long
    repeating constants, while

    potentially producing marginally worse patterns. The default behaviour (when the
    value is *None*) is to enable

    heuristically enable the optimization, based on the characteristics of the inputs.
    The optimization

    can be enabled or disabled in other cases by setting the value to *True* and *False*,
    respectively.'
  return:
    types:
    - <xref:Optional>[<xref:bool>]
- uid: prose.codeaccelerator.FindPatternsBuilder.target
  name: target
  summary: 'Target runtime library for the generated code.


    Supported values are *"auto"*, *"pandas"*, and *"pyspark"*. Default is *"pandas"*.'
