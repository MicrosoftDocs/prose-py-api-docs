### YamlMime:PythonClass
uid: prose.codeaccelerator.DetectTypesBuilder
name: DetectTypesBuilder
fullName: prose.codeaccelerator.DetectTypesBuilder
module: prose.codeaccelerator
inheritances:
- builtins.object
summary: A builder to learn code to transform string-valued data into appropriate
  typed values.
constructor:
  syntax: DetectTypesBuilder(data, true_length=None)
  parameters:
  - name: data
    description: 'A data collection with string-valued data values. The type can be

      either a pandas dataframe, a dictionary mapping column names to lists of strings,
      or just

      an iterable of strings. In the first two cases, the data types are detected
      separately for

      each column and in the final case, a single data type is detected for the values
      in the list.'
    isRequired: true
  - name: true_length
    description: 'An optional parameter that can be used to pass the actual size of
      the dataset,

      in the event that *data* is a sample of the entire dataset.'
    isRequired: true
methods:
- uid: prose.codeaccelerator.DetectTypesBuilder.convert_types
  name: convert_types
  summary: 'Automatically perform type conversion on the DataFrame df. If all that
    is required

    is a best effort attempt to convert strings in the DataFrame df to appropriately
    typed values,

    then this entry point is significantly more efficient than the process of creating
    a builder,

    learning the conversion code and executing the conversion code.


    The value *None* which is the default means

    that the standard list of types, which includes Booleans, Numeric types,

    Dates and Times, and String valued types are to be detected.

    Valid strings in the list include the values: ''bool'', ''boolean'',

    ''numeric'', ''number'', ''datetime'', ''string'' and ''text''.


    If the values in a column are not identifiable as values

    of the types that *types_to_detect* is set to, then they will

    be treated as string values.'
  signature: convert_types(df, types_to_detect=None)
  parameters:
  - name: df
    description: The DataFrame on which type conversion is to be performed.
    isRequired: true
  - name: types_to_detect
    description: The list of types to detect.
    isRequired: true
- uid: prose.codeaccelerator.DetectTypesBuilder.learn
  name: learn
  summary: Infer the data types in the provided data.
  signature: learn()
  return:
    description: 'A DetectTypesLearnResult object which can be used to

      either generate the code to coerce the data into the appropriate types,

      or to directly transform the sample data into the appropriate types.'
attributes:
- uid: prose.codeaccelerator.DetectTypesBuilder.nrows
  name: nrows
  summary: 'Number of rows to analyze while detecting data types.


    The value *None*, which is the default, means all rows are analyzed.'
- uid: prose.codeaccelerator.DetectTypesBuilder.target
  name: target
  summary: 'Target runtime library for the generated code.


    Supported values are *"auto"*, *"pandas"*, and *"pyspark"*. Default is *"pandas"*.'
- uid: prose.codeaccelerator.DetectTypesBuilder.types_to_detect
  name: types_to_detect
  summary: 'The list of types to detect.


    The value *None* which is the default means

    that the standard list of types, which includes Booleans, Numeric types,

    Dates and Times, and String valued types are to be detected.

    Valid strings in the list include the values: ''bool'', ''boolean'',

    ''numeric'', ''number'', ''datetime'', ''string'' and ''text''.


    If the values in a column are not identifiable as values

    of the types that *types_to_detect* is set to, then they will

    be treated as string values.'
