### YamlMime:UniversalReference
api_name: []
items:
- children:
  - prose.codeaccelerator.DetectTypesBuilder.convert_types
  - prose.codeaccelerator.DetectTypesBuilder.learn
  - prose.codeaccelerator.DetectTypesBuilder.nrows
  - prose.codeaccelerator.DetectTypesBuilder.target
  - prose.codeaccelerator.DetectTypesBuilder.types_to_detect
  class: prose.codeaccelerator.DetectTypesBuilder
  fullName: prose.codeaccelerator.DetectTypesBuilder
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: prose.codeaccelerator
  name: DetectTypesBuilder
  summary: A builder to learn code to transform string-valued data into appropriate
    typed values.
  syntax:
    content: DetectTypesBuilder(data, true_length=None)
    parameters:
    - description: 'A data collection with string-valued data values. The type can
        be

        either a pandas dataframe, a dictionary mapping column names to lists of strings,
        or just

        an iterable of strings. In the first two cases, the data types are detected
        separately for

        each column and in the final case, a single data type is detected for the
        values in the list.'
      id: data
    - description: 'An optional parameter that can be used to pass the actual size
        of the dataset,

        in the event that *data* is a sample of the entire dataset.'
      id: true_length
  type: class
  uid: prose.codeaccelerator.DetectTypesBuilder
- class: prose.codeaccelerator.DetectTypesBuilder
  fullName: prose.codeaccelerator.DetectTypesBuilder.convert_types
  langs:
  - python
  module: prose.codeaccelerator
  name: convert_types(df, types_to_detect=None)
  summary: 'Automatically perform type conversion on the DataFrame df. If all that
    is required

    is a best effort attempt to convert strings in the DataFrame df to appropriately
    typed values,

    then this entry point is significantly more efficient than the process of creating
    a builder,

    learning the conversion code and executing the conversion code.


    The value *None* which is the default means

    that the standard list of types, which includes Booleans, Numeric types,

    Dates and Times, and String valued types are to be detected.

    Valid strings in the list include the values: ''bool'', ''boolean'',

    ''numeric'', ''number'', ''datetime'', ''string'' and ''text''.


    If the values in a column are not identifiable as values

    of the types that *types_to_detect* is set to, then they will

    be treated as string values.'
  syntax:
    content: convert_types(df, types_to_detect=None)
    parameters:
    - description: The DataFrame on which type conversion is to be performed.
      id: df
    - description: The list of types to detect.
      id: types_to_detect
  type: method
  uid: prose.codeaccelerator.DetectTypesBuilder.convert_types
- class: prose.codeaccelerator.DetectTypesBuilder
  fullName: prose.codeaccelerator.DetectTypesBuilder.learn
  langs:
  - python
  module: prose.codeaccelerator
  name: learn()
  summary: Infer the data types in the provided data.
  syntax:
    content: learn()
    return:
      description: 'A DetectTypesLearnResult object which can be used to

        either generate the code to coerce the data into the appropriate types,

        or to directly transform the sample data into the appropriate types.'
  type: method
  uid: prose.codeaccelerator.DetectTypesBuilder.learn
- class: prose.codeaccelerator.DetectTypesBuilder
  fullName: prose.codeaccelerator.DetectTypesBuilder.nrows
  langs:
  - python
  module: prose.codeaccelerator
  name: nrows
  summary: 'Number of rows to analyze while detecting data types.


    The value *None*, which is the default, means all rows are analyzed.'
  syntax: {}
  type: attribute
  uid: prose.codeaccelerator.DetectTypesBuilder.nrows
- class: prose.codeaccelerator.DetectTypesBuilder
  fullName: prose.codeaccelerator.DetectTypesBuilder.target
  langs:
  - python
  module: prose.codeaccelerator
  name: target
  summary: 'Target runtime library for the generated code.


    Supported values are *"auto"*, *"pandas"*, and *"pyspark"*. Default is *"pandas"*.'
  syntax: {}
  type: attribute
  uid: prose.codeaccelerator.DetectTypesBuilder.target
- class: prose.codeaccelerator.DetectTypesBuilder
  fullName: prose.codeaccelerator.DetectTypesBuilder.types_to_detect
  langs:
  - python
  module: prose.codeaccelerator
  name: types_to_detect
  summary: 'The list of types to detect.


    The value *None* which is the default means

    that the standard list of types, which includes Booleans, Numeric types,

    Dates and Times, and String valued types are to be detected.

    Valid strings in the list include the values: ''bool'', ''boolean'',

    ''numeric'', ''number'', ''datetime'', ''string'' and ''text''.


    If the values in a column are not identifiable as values

    of the types that *types_to_detect* is set to, then they will

    be treated as string values.'
  syntax: {}
  type: attribute
  uid: prose.codeaccelerator.DetectTypesBuilder.types_to_detect
references:
- fullName: prose.codeaccelerator.DetectTypesBuilder.convert_types
  isExternal: false
  name: convert_types(df, types_to_detect=None)
  parent: prose.codeaccelerator.DetectTypesBuilder
  uid: prose.codeaccelerator.DetectTypesBuilder.convert_types
- fullName: prose.codeaccelerator.DetectTypesBuilder.learn
  isExternal: false
  name: learn()
  parent: prose.codeaccelerator.DetectTypesBuilder
  uid: prose.codeaccelerator.DetectTypesBuilder.learn
- fullName: prose.codeaccelerator.DetectTypesBuilder.nrows
  isExternal: false
  name: nrows
  parent: prose.codeaccelerator.DetectTypesBuilder
  uid: prose.codeaccelerator.DetectTypesBuilder.nrows
- fullName: prose.codeaccelerator.DetectTypesBuilder.target
  isExternal: false
  name: target
  parent: prose.codeaccelerator.DetectTypesBuilder
  uid: prose.codeaccelerator.DetectTypesBuilder.target
- fullName: prose.codeaccelerator.DetectTypesBuilder.types_to_detect
  isExternal: false
  name: types_to_detect
  parent: prose.codeaccelerator.DetectTypesBuilder
  uid: prose.codeaccelerator.DetectTypesBuilder.types_to_detect
