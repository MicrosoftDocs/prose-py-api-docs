### YamlMime:UniversalReference
api_name: []
items:
- children:
  - prose.codeaccelerator.ReadJsonLearnResult.code
  - prose.codeaccelerator.ReadJsonLearnResult.column_count
  - prose.codeaccelerator.ReadJsonLearnResult.data
  - prose.codeaccelerator.ReadJsonLearnResult.names
  class: prose.codeaccelerator.ReadJsonLearnResult
  fullName: prose.codeaccelerator.ReadJsonLearnResult
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: prose.codeaccelerator
  name: ReadJsonLearnResult
  summary: 'The result from attempting to learn a program for JSON reading.


    (The result of calling <xref:prose.codeaccelerator.ReadJsonBuilder.learn>.)

    Only intended to be called internally.





    '
  syntax:
    content: ReadJsonLearnResult(filename, result)
  type: class
  uid: prose.codeaccelerator.ReadJsonLearnResult
- class: prose.codeaccelerator.ReadJsonLearnResult
  fullName: prose.codeaccelerator.ReadJsonLearnResult.code
  langs:
  - python
  module: prose.codeaccelerator
  name: code
  summary: 'Return the code that was learned.

    '
  syntax:
    content: code()
    parameters: []
    return:
      description: 'A callable that accepts a single argument (the file name to read).

        Its string representation is a Python code to read the input file.

        '
  type: method
  uid: prose.codeaccelerator.ReadJsonLearnResult.code
- class: prose.codeaccelerator.ReadJsonLearnResult
  fullName: prose.codeaccelerator.ReadJsonLearnResult.column_count
  langs:
  - python
  module: prose.codeaccelerator
  name: column_count
  summary: 'Number of columns that the learned program will generate in its output.

    '
  syntax: {}
  type: attribute
  uid: prose.codeaccelerator.ReadJsonLearnResult.column_count
- class: prose.codeaccelerator.ReadJsonLearnResult
  fullName: prose.codeaccelerator.ReadJsonLearnResult.data
  langs:
  - python
  module: prose.codeaccelerator
  name: data
  summary: 'Return the data obtained when running the learned program on the input
    file.

    '
  syntax:
    content: data(nrows=None)
    parameters:
    - defaultValue: None
      description: 'The number of rows to read from the output. Default is None (the
        entire file).

        If specified, then it must be greater than zero.

        '
      id: nrows
      type:
      - int
    return:
      description: 'The first `nrows` or the data.

        '
      type:
      - Union[[DataFrame](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html),
        List[[Row](http://spark.apache.org/docs/latest/api/python/pyspark.sql.html#pyspark.sql.Row)]]
  type: method
  uid: prose.codeaccelerator.ReadJsonLearnResult.data
- class: prose.codeaccelerator.ReadJsonLearnResult
  fullName: prose.codeaccelerator.ReadJsonLearnResult.names
  langs:
  - python
  module: prose.codeaccelerator
  name: names
  summary: 'List of column names learned from the input file that will be used in
    the output table.

    '
  syntax: {}
  type: attribute
  uid: prose.codeaccelerator.ReadJsonLearnResult.names
references:
- fullName: prose.codeaccelerator.ReadJsonLearnResult.code
  isExternal: false
  name: code
  parent: prose.codeaccelerator.ReadJsonLearnResult
  uid: prose.codeaccelerator.ReadJsonLearnResult.code
- fullName: prose.codeaccelerator.ReadJsonLearnResult.column_count
  isExternal: false
  name: column_count
  parent: prose.codeaccelerator.ReadJsonLearnResult
  uid: prose.codeaccelerator.ReadJsonLearnResult.column_count
- fullName: prose.codeaccelerator.ReadJsonLearnResult.data
  isExternal: false
  name: data
  parent: prose.codeaccelerator.ReadJsonLearnResult
  uid: prose.codeaccelerator.ReadJsonLearnResult.data
- fullName: prose.codeaccelerator.ReadJsonLearnResult.names
  isExternal: false
  name: names
  parent: prose.codeaccelerator.ReadJsonLearnResult
  uid: prose.codeaccelerator.ReadJsonLearnResult.names
- fullName: Union[[DataFrame](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html),
    List[[Row](http://spark.apache.org/docs/latest/api/python/pyspark.sql.html#pyspark.sql.Row)]]
  name: Union[[DataFrame](html), List[[Row](Row)]]
  spec.python:
  - fullName: Union
    name: Union
    uid: Union
  - fullName: '['
    name: '['
  - fullName: '['
    name: '['
  - fullName: DataFrame
    name: DataFrame
    uid: DataFrame
  - fullName: ']'
    name: ']'
  - fullName: (
    name: (
  - fullName: https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html
    name: html
    uid: https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html
  - fullName: )
    name: )
  - fullName: ', '
    name: ', '
  - fullName: List
    name: List
    uid: List
  - fullName: '['
    name: '['
  - fullName: '['
    name: '['
  - fullName: Row
    name: Row
    uid: Row
  - fullName: ']'
    name: ']'
  - fullName: (
    name: (
  - fullName: http://spark.apache.org/docs/latest/api/python/pyspark.sql.html#pyspark.sql.Row
    name: Row
    uid: http://spark.apache.org/docs/latest/api/python/pyspark.sql.html#pyspark.sql.Row
  - fullName: )
    name: )
  - fullName: ']'
    name: ']'
  - fullName: ']'
    name: ']'
  uid: Union[[DataFrame](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html),
    List[[Row](http://spark.apache.org/docs/latest/api/python/pyspark.sql.html#pyspark.sql.Row)]]
